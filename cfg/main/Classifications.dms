container Classifications: Using = "Units"
{
	#include<osm.dms>
	#include<modes.dms>
	
	unit<uint32> LinkTypes: NrOfRows = 7
	{
		attribute<string> Name     : ['Undefined','Scheduled','Transfer','Stop_to_Dest','Org_to_Stop','Waiting_at_Stop','Waiting_at_Org'];
		attribute<string> Label    := Name;
		attribute<uint32> PenColor : [rgb(128,128,128), rgb(200,0,0), rgb(129,129,0), rgb(0,0,128),rgb(0,0,255), rgb(128,128,128), rgb(128,128,128)], DialogType = "PenColor";
		attribute<int16>  PenStyle : [4,0,1,2,2,0], DialogType = "PenStyle";
		
		container v := for_each_nedv(Name, string(id(.)), void, .);
	}
	
	unit<uint32> Agencies := unique(SourceData/Infrastructure/GTFS/LoadFeeds/ReadFSS/Agency/data/agency_name)
	{
		attribute<string> name  := AsItemName(values);
		attribute<string> label := values;
		
		attribute<bool>   IsForeign := name == 'De_Lijn' || name == 'DB'  || name == 'Eurobahn' || name == 'NIAG' || name == 'NMBS' || name == 'VIAS' || name == 'NS_International';
						//vervoerders die wel in GTFS zitten maar niet in deze lijst zijn niet opgenomen omdat ze in het buitenland opereren (De Lijn, DB, Eurobahn, NIAG, NMBS, VIAS)

		container V := for_each_nedv(Name, string(id(.)), void, .);
	}
	
	unit<uint8> ImpedanceTypes : nrofrows = 4
	{
		attribute<string> name : ['max_pedestrian','max_bike','max_car','max_limit_car'];
	}
	
	unit<uint8> NetworkType: nrofrows = 3
	{
		attribute<string> name         : ['pedestrian','bike','car'];
		attribute<string> label        := name;
		attribute<km_hr>  maxspeed     := union_data(., ModelParameters/Advanced/WalkingSpeed, ModelParameters/Advanced/BikingSpeed, 0[km_hr]);
		
		container V := for_each_nedv(replace(name,';','','Ãº','u',' ','_','-','_','?','','/',''), String(ID(.))+'[..]', void, .);
	}
	
	unit<uint8> pand_status : nrofrows = 10
	{
		attribute<string>    label     : ['Bouw gestart','Bouwvergunning verleend','Niet gerealiseerd pand','Pand buiten gebruik','Pand gesloopt','Pand in gebruik','Pand in gebruik (niet ingemeten)','Sloopvergunning verleend','Pand ten onrechte opgevoerd','Verbouwing pand'], DialogType = "LabelText";
		attribute<string>    name      := replace(label, ' ', '_', '-', '_', '(', '', ')', '');
		container V := for_each_nedv(name, String(ID(.))+'[..]', void, .);
	}
	
	unit<uint8> vbo_status : nrofrows = 8
	{
		attribute<string>    label     : ['Niet gerealiseerd verblijfsobject','Verblijfsobject buiten gebruik','Verblijfsobject gevormd','Verblijfsobject in gebruik','Verblijfsobject in gebruik (niet ingemeten)','Verblijfsobject ingetrokken','Verblijfsobject ten onrechte opgevoerd', 'Verbouwing verblijfsobject'], DialogType = "LabelText";
		attribute<string>    name      := replace(label, ' ', '_', '-', '_', '(', '', ')', '');
		container V := for_each_nedv(name, String(ID(.))+'[..]', void, .);
	}
	unit<uint8> vbo_gebruiksdoel: nrofrows = 11
	{
		attribute<uint8> ID := ID(.);
		attribute<string> label:
		[
			'bijeenkomstfunctie',
			'celfunctie',
			'gezondheidszorgfunctie',
			'industriefunctie',
			'kantoorfunctie',
			'logiesfunctie',
			'onderwijsfunctie',
			'overige gebruiksfunctie',
			'sportfunctie',
			'winkelfunctie',
			'woonfunctie'
		];
		
		attribute<string> name := replace(replace(label,' ','_'), 'functie','');
		attribute<uint32> BrushColor:  DialogType = "BrushColor",[rgb(255,255,255), rgb(  0,129,  0),rgb(  0,  0,255),rgb(255,220,  0),rgb(255,  0,  0)];
		container V := for_each_nedv(name, String(ID(.))+'[..]', void, .);
	}
}